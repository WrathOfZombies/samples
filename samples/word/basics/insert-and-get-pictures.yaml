id:
gist: ''
source: WORD
author: Juan Balmori - Microsoft
name: Inline pictures
description: Shows how to insert and get inline pictures.
script:
  content: |
    $("#setup").click(setup);
    $("#insert").click(insert);
    $("#get").click(get);


    function setup() { 
        Word.run(function (context) {
            // lets insert a couple of paragraphs to illustrate the point..
            context.document.body.clear();
            var firstSentence = context.document.body.insertParagraph("Video provides a powerful way to help you prove $1,000.00 times your point. When you click Online Video, you can paste in the embed code for the video you want to add. You can also type a keyword to search online for the video that best fits your document.", "start"); 
            var secondSentence = context.document.body.paragraphs.getLast().insertText("To make your document look professionally produced, Word provides header, footer, cover page, and text box designs that complement each other. For example, you can add a matching Online cover page, header, and sidebar. Click Insert and then choose the $250,000.00 Online elements you want from the different Online galleries.", "replace");
            return context.sync();
         })
    }

    function insert() {
        Word.run(function (context) {
            var picture = context.document.body.insertInlinePictureFromBase64(getImageAsBase64(), "end");
            return context.sync()
                .then(function () {
                    console.log("success");
                })
        })
            .catch(function(e){
                console.log(e.message);
            })
    }

    function get() {
        Word.run(function (context) {
            // lets get the first image in the document
            var firstPicture = context.document.body.inlinePictures.getFirst();
            context.load(firstPicture);
            return context.sync()
                .then(function () {
                    //we can get the base64 of the image...
                    var base64 = firstPicture.getBase64ImageSrc();
                    return context.sync()
                     .then(function () { 
                            console.log(base64.value);
                        })
                })
        })
            .catch(function(e){
                console.log(e.message);
            })
    }

    function getImageAsBase64() {
        return ("iVBORw0KGgoAAAANSUhEUgAAAIAAAACABAMAAAAxEHz4AAAAJFBMVEX///9GRkZGRkZGRkZGRkZGRkZGRkZGRkYBpO9/ugDyUCL/uQGm4PjWAAAACHRSTlMBCQ0RFRknMx7uViEAAAB3SURBVGje7dcxCYBQGEXhi6izYBHB0RIiiAXkzW5iAMEKFnCwguVscJd/ecM5Ab79SNHK5FqlZXeNql/XIx23awMAAAAAAAAAAAAAAAAAyBwIvzNJxeyapLZ3Naou1ykNn6sDAAAAAAAAAAAAAAAAAMgcCL9ztB/UhshWs1l/WAAAAABJRU5ErkJggg==");

        }
  language: typescript
style:
  content: |2
        body {
            margin: 0;
            padding: 10px;
        }


        /* Button customization, including overwriting some Fabric defaults */

        .ms-Button, .ms-Button:focus {
            background: #217346;
            border: #217346;
        }

            .ms-Button > .ms-Button-label,
            .ms-Button:focus > .ms-Button-label,
            .ms-Button:hover > .ms-Button-label {
                color: white;
            }

            .ms-Button:hover, .ms-Button:active {
                background: #164b2e;
            }

            .ms-Button.is-disabled, .ms-Button:disabled {
                background-color: #f4f4f4;
                border-color: #f4f4f4;
            }

            .ms-Button.is-disabled .ms-Button-label,
            .ms-Button:disabled .ms-Button-label {
                color: #a6a6a6;
            }

        #setup.ms-Button, #setup.ms-Button:focus {
            background: darkred;
            border: darkred;
        }

            #setup.ms-Button:hover, #setup.ms-Button:active {
                background: red;
            }

        #samples-container {
            margin-top: 20px;
        }

        #samples-container .ms-Button {
            display: block;
            margin-bottom: 5px;
        }

        #samples-container .ms-Button, #setup-container .ms-Button {
            margin-left: 20px;
            min-width: 80px;
        }
  language: css
template:
  content: |2
      <h2 class="ms-font-m">This sample demonstrates how to insert and get inline pictures in a document.</h2>


        <div id="setup-container">
            <p class="ms-font-m">Click "setup" to insert sample data and between runs to reset the sample.</p>

            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Setup</span>
            </button>
        </div>


        <div id="samples-container">
            <p class="ms-font-m">Sample snippets to try.</p>

            <button id="insert" class="ms-Button">
                <span class="ms-Button-label">Insert Picture</span>
            </button>   
            <button id="get" class="ms-Button">
                <span class="ms-Button-label">Get Pictures</span>
            </button>
            
        </div>
  language: html
libraries: |-
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/Office.js

  // NPM libraries
  jquery
  office-ui-fabric-js/dist/js/fabric.min.js
  office-ui-fabric-js/dist/css/fabric.min.css
  office-ui-fabric-js/dist/css/fabric.components.min.css
  @microsoft/office-js-helpers/dist/office.helpers.min.js
  core-js/client/core.min.js

  // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
  dt~office-js
  dt~jquery
  dt~core-js
  @microsoft/office-js-helpers/dist/office.helpers.d.ts
lastModified: 1487194323962
