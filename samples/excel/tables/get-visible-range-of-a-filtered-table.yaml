id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Get visible range from a filtered table
description: Get visible range from a filtered table
script:
  content: "$('#create-table').click(createTable);\n$('#filter-table').click(filterTable);\n$('#get-range').click(getRange);\n$('#get-visible-range').click(getVisibleRange);\n\nasync function getVisibleRange() {\n  try {\n    await Excel.run(async (context) => {\n\n      const sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\tconst expensesTable = sheet.tables.getItem(\"ExpensesTable\");\n\t\t\t\n      var visibleRange = expensesTable.getDataBodyRange().getVisibleView().load(\"values\");\n\n      await sheet.context.sync();\n\n      const visibleValues = visibleRange.values;\n\n      console.log(visibleValues);\n\n      await context.sync();\n    })\n  }\n  catch (error) {\n    OfficeHelpers.Utilities.log(error);\n  }\n}\n\nasync function getRange() {\n  try {\n    await Excel.run(async (context) => {\n\n      const sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\tconst expensesTable = sheet.tables.getItem(\"ExpensesTable\");\n\t\t\t\n      var range = expensesTable.getDataBodyRange().load(\"values\");\n\n      await sheet.context.sync();\n\n      const values = range.values;\n\n      console.log(values);\n\n      await context.sync();\n    })\n  }\n  catch (error) {\n    OfficeHelpers.Utilities.log(error);\n  }\n}\n\n/** Create a new table with some sample data*/\nasync function createTable() {\n    try {\n\t\t\tawait Excel.run(async (context) => {\n\n\t\t\t\tawait OfficeHelpers.Excel.forceCreateSheet(context.workbook.worksheets, \"Playground\");\n\n\t\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\t\tlet expensesTable = sheet.tables.add('A1:D1', true /*hasHeaders*/);\n\t\t\t\texpensesTable.name = \"ExpensesTable\";\n\n\t\t\t\texpensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n\t\t\t\texpensesTable.rows.add(null /*add at the end*/, [\n\t\t\t\t\t[\"1/1/2017\", \"The Phone Company\", \"Communications\", \"$120\"],\n\t\t\t\t\t[\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\n\t\t\t\t\t[\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\n\t\t\t\t\t[\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\n\t\t\t\t\t[\"1/11/2017\", \"Bellows College\", \"Education\", \"$350\"],\n\t\t\t\t\t[\"1/15/2017\", \"Trey Research\", \"Other\", \"$135\"],\n\t\t\t\t\t[\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\n\t\t\t\t]);\n\n\t\t\t\tif (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n\t\t\t\t\tsheet.getUsedRange().format.autofitColumns();\n\t\t\t\t\tsheet.getUsedRange().format.autofitRows();\n\t\t\t\t}\n\n\t\t\t\tsheet.activate();\n\n\t\t\t\tawait context.sync();\n\t\t\t})\n    }\n  \tcatch (error) {\n\t\t\tOfficeHelpers.Utilities.log(error);\n\t\t}\n}\n\n/** Filter the table*/\nasync function filterTable() {\n    try {\n\t\t\tawait Excel.run(async (context) => {\n\n\t\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\t  const expensesTable = sheet.tables.getItem(\"ExpensesTable\");\n\n\t\t\t\tvar filter = expensesTable.columns.getItem(\"AMOUNT\").filter;\n\n\t\t\t\tfilter.apply({\n\t\t\t\t\tfilterOn: Excel.FilterOn.dynamic,\n\t\t\t\t\tdynamicCriteria: Excel.DynamicFilterCriteria.belowAverage\n\t\t\t\t});\n\n\t\t\t\tawait context.sync();\n\t\t\t})\n    }\n  \tcatch (error) {\n\t\t\tOfficeHelpers.Utilities.log(error);\n\t\t}\n}\n\n"
  language: typescript
style:
  content: ''
  language: css
template:
  content: |
    <div id="content-main" class="ms-font-m">
        <p>This sample shows how to get the visible range from a filtered table using the Excel JavaScript API.</p>
        <h3>Set up</h3>
        <button id="create-table" class="ms-Button">
            <span class="ms-Button-label">Create table</span>
        </button>
        <br />
        <br />
        <button id="filter-table" class="ms-Button">
            <span class="ms-Button-label">Filter table</span>
        </button>
        <h3>Try it out</h3>
        <button id="get-range" class="ms-Button">
            <span class="ms-Button-label">Get range</span>
        </button>
        <br />
        <br />
        <button id="get-visible-range" class="ms-Button">
            <span class="ms-Button-label">Get visible range</span>
        </button>
    </div>
  language: html
libraries: |-
  // Office.js
  https://appsforoffice.officeapps.live.com/afo/lib/beta/hosted/office.js

  // NPM libraries
  jquery
  office-ui-fabric-js/dist/js/fabric.min.js
  office-ui-fabric-js/dist/css/fabric.min.css
  office-ui-fabric-js/dist/css/fabric.components.min.css
  @microsoft/office-js-helpers@0.6.1-beta.0/dist/office.helpers.min.js
  core-js/client/core.min.js

  // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
  dt~office-js
  dt~jquery
  dt~core-js
  @microsoft/office-js-helpers@0.6.1-beta.0/dist/office.helpers.d.ts
