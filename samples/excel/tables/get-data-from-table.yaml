id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Get data from a table
description: Get data from a table
script:
  content: "$(\"#setup\").click(setup);\n$(\"#get-data-from-table\").click(getData);\n\nasync function getData() {\n    try {\n        await Excel.run(async (context) => {\n\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n       const expensesTable = sheet.tables.getItem(\"ExpensesTable\");\n\n        const headerRange = expensesTable.getHeaderRowRange().load(\"values\");\n\n        const bodyRange = expensesTable.getDataBodyRange().load(\"values\");\n\n        const columnRange = expensesTable.columns.getItem(\"MERCHANT\").getDataBodyRange().load(\"values\");\n\n        const rowRange= expensesTable.rows.getItemAt(1).load(\"values\");\n\n        await sheet.context.sync();\n\n        const headerValues = headerRange.values;\n        const bodyValues = bodyRange.values;\n        const merchantColumnValues = columnRange.values;\n        const secondRowValues = rowRange.values;\n\n        sheet.getRange(\"A18:A18\").values = \"Results\";\n\n        sheet.getRange(\"A20:D20\").values = headerValues;\n\n        sheet.getRange(\"A21:D27\").values = bodyValues;\n\n        sheet.getRange(\"B30:B36\").values = merchantColumnValues;\n\n        sheet.getRange(\"A17:D17\").values = secondRowValues;\n            await context.sync();\n        });\n    }\n    catch (error) {\n                OfficeHelpers.Utilities.log(error);\n    }\n}\n\n/** Create a new table with some sample data */\nasync function setup() {\n    try {\n    \tawait Excel.run(async (context) => {\n\n\t\t\tawait OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, \"Playground\");\n\n\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\tconst expensesTable = sheet.tables.add('A1:D1', true /*hasHeaders*/);\n\t\t\t expensesTable.name = \"ExpensesTable\";\n\n\t\t\texpensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n\t\t\texpensesTable.rows.add(null /*add at the end*/, [\n\t\t\t[\"1/1/2017\", \"The Phone Company\", \"Communications\", \"$120\"],\n\t\t\t[\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\n\t\t\t[\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\n\t\t\t[\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\n\t\t\t[\"1/11/2017\", \"Bellows College\", \"Education\", \"$350\"],\n\t\t\t[\"1/15/2017\", \"Trey Research\", \"Other\", \"$135\"],\n\t\t\t[\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\n\t\t]);\n\n\t\tif (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n\t\t\t\t\tsheet.getUsedRange().format.autofitColumns();\n\t\tsheet.getUsedRange().format.autofitRows();\n\t\t}\n\n\t    \tsheet.activate();\n\n\t\t    await context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n} \n"
  language: typescript
style:
  content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
  language: css
template:
  content: |+
    <section class="ms-font-m">
        <p>This sample shows how to get data from a table and write it to the sheet using the Excel JavaScript API.</p>
    </section>

    <section class="setup ms-font-m">
        <h3>Set up</h3>
        <button id="setup" class="ms-Button">
            <span class="ms-Button-label">Create table</span>
        </button>
    </section>

    <section class="samples ms-font-m">
        <h3>Try it out</h3>
        <button id="get-data-from-table" class="ms-Button">
            <span class="ms-Button-label">Get data from a table</span>
        </button>
    </section>


  language: html
libraries: |
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js

  // CSS Libraries
  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  // NPM libraries
  core-js@2.4.1/client/core.min.js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.min.js
  jquery@3.1.1

  // IntelliSense: @types/library or node_modules paths or URL to d.ts files
  @types/office-js
  @types/core-js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.d.ts
  @types/jquery
