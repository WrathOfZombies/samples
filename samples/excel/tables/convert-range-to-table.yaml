id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Convert a range to a table
description: Convert a range to a table
script:
  content: "$('#create-range').click(createRange);\n$('#convert-range-to-table').click(convertRangeToTable);\n\n/** Create a range */\nfunction createRange() {\n    Excel.run(async (context) => {\n        let sheet: Excel.Worksheet;\n        try {\n            // If sheet already exists, queue a command to delete it\n            context.workbook.worksheets.getItem(\"Playground\").delete();\n\n            // Then create a proxy object for a new worksheet\n            sheet = context.workbook.worksheets.add(\"Playground\");\n\n            // Call the helper to create the table\n            await queueCreateRange(sheet);\n\n            //Queue a command to activate the sheet\n            sheet.activate();\n\n            // Run all of the queued up commands\n            await context.sync();\n        }\n        catch (error) {\n            //  Re-throw the original error, for appropriate error-handling\n            // (in this snippet, simply showing a notification)\n            throw error;\n        }\n    })\n    .catch(handleError);\n}\n\n/** Convert a range into a table */\nfunction convertRangeToTable() {\n    Excel.run(async (context) => {\n        let sheet: Excel.Worksheet;\n        try {\n\n          // Get the playground sheet\n          sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n            // Call the helper to create the table\n            await queueConvertRangeToTable(sheet);\n\n            // Run all of the queued up commands\n            await context.sync();\n        }\n        catch (error) {\n            //  Re-throw the original error, for appropriate error-handling\n            // (in this snippet, simply showing a notification)\n            throw error;\n        }\n    })\n    .catch(handleError);\n}\n\n// Helper functions:\n\n    // Creates the range\n    async function queueCreateRange(sheet: Excel.Worksheet) {\n        \n\t\t\t//Create an array containing sample data\n\t\t\tconst values = [[\"Product\", \"Qtr1\", \"Qtr2\", \"Qtr3\", \"Qtr4\"],\n\t\t\t\t\t\t  [\"Frames\", 5000, 7000, 6544, 4377],\n\t\t\t\t\t\t  [\"Saddles\", 400, 323, 276, 651],\n\t\t\t\t\t\t  [\"Brake levers\", 12000, 8766, 8456, 9812],\n\t\t\t\t\t\t  [\"Chains\", 1550, 1088, 692, 853],\n\t\t\t\t\t\t  [\"Mirrors\", 225, 600, 923, 544],\n\t\t\t\t\t\t  [\"Spokes\", 6005, 7634, 4589, 8765]];\n\n\t\t\t//Queue a command to write the sample data to the specified range\n\t\t\t//in the worksheet and bold the header row\n\t\t\tlet range = sheet.getRange(\"A2:E8\");\n\t\t\trange.values = values;\n\t\t\tsheet.getRange(\"A2:E2\").format.font.bold = true;\n\n        //Autofit columns and rows\n        sheet.getUsedRange().getEntireColumn().format.autofitColumns();\n        sheet.getUsedRange().getEntireRow().format.autofitRows();\n    }\n\n    // Creates the table\n    async function queueConvertRangeToTable(sheet: Excel.Worksheet) {\n\n        // Queue a command to add a table to the sheet\n        let expensesTable = sheet.tables.add('A2:E8', true);\n        expensesTable.name = \"ExpensesTable\";\n\n        //Autofit columns and rows\n        sheet.getUsedRange().getEntireColumn().format.autofitColumns();\n        sheet.getUsedRange().getEntireRow().format.autofitRows();\n    }\n\n\n\nfunction handleError(error) {\n    OfficeHelpers.Utilities.log(error);\n}\n\nconst transactions = [    \n  {\n    \"DATE\":\"1/1/2017\",\n    \"MERCHANT\":\"THE PHONE COMPANY\",\n    \"CATEGORY\":\"Communications\",\n    \"AMOUNT\":\"$120\"\n  },\n  {\n    \"DATE\":\"1/1/2017\",\n    \"MERCHANT\":\"SOUTHRIDGE VIDEO\",\n    \"CATEGORY\":\"Entertainment\",\n    \"AMOUNT\":\"$40\"\n  },\n  {\n    \"DATE\":\"1/1/2017\",\n    \"MERCHANT\":\"COHO WINERY\",\n    \"CATEGORY\":\"Restaurant\",\n    \"AMOUNT\":\"$47\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"CONTOSO, LTD\",\n    \"CATEGORY\":\"Shopping\",\n    \"AMOUNT\":\"$56\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"CONTOSO, LTD\",\n    \"CATEGORY\":\"Shopping\",\n    \"AMOUNT\":\"$110\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"LIBERTY BAKERY & CAFE\",\n    \"CATEGORY\":\"Groceries\",\n    \"AMOUNT\":\"$27\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"LIBERTY BAKERY & CAFE\",\n    \"CATEGORY\":\"Groceries\",\n    \"AMOUNT\":\"$38\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"NORTHWIND ELECTRIC CARS\",\n    \"CATEGORY\":\"Transportation\",\n    \"AMOUNT\":\"$42\"\n  },\n  {\n    \"DATE\":\"1/2/2017\",\n    \"MERCHANT\":\"BEST FOR YOU ORGANICS COMPANY\",\n    \"CATEGORY\":\"Groceries\",\n    \"AMOUNT\":\"$27\"\n  },\n  {\n    \"DATE\":\"1/3/2017\",\n    \"MERCHANT\":\"CONTOSO, LTD\",\n    \"CATEGORY\":\"Shopping\",\n    \"AMOUNT\":\"$25\"\n  },\n  {\n    \"DATE\":\"1/5/2017\",\n    \"MERCHANT\":\"MUNSON'S PICKLES AND PRESERVES FARM\",\n    \"CATEGORY\":\"Groceries\",\n    \"AMOUNT\":\"$178\"\n  }\n\n];\n\n\n"
  language: typescript
style:
  content: ".ms-Button {\r\n    Padding: 10px;\r\n    margin: 10px;\r\n}\r\n    /* Your style goes here */"
  language: css
template:
  content: |-
    <div id="content-header" class="ms-font-m">
        <h1>Welcome</h1>
    </div>

    <div id="content-main" class="ms-font-m">
        <p>This sample shows how to convert a range to a tble using the Excel JavaScript API.</p>
        <h3>Try it out</h3>
            <button id="create-range" class="ms-Button">
            <span class="ms-Button-label">Step 1: Create range</span>
        </button>
        <button id="convert-range-to-table" class="ms-Button">
            <span class="ms-Button-label">Step 2: Convert range to table</span>
        </button>
    </div>
  language: html
libraries: |-
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/Office.js

  // NPM libraries
  jquery
  office-ui-fabric-js/dist/js/fabric.min.js
  office-ui-fabric-js/dist/css/fabric.min.css
  office-ui-fabric-js/dist/css/fabric.components.min.css
  @microsoft/office-js-helpers/dist/office.helpers.min.js
  core-js/client/core.min.js

  // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
  dt~office-js
  dt~jquery
  dt~core-js
  @microsoft/office-js-helpers/dist/office.helpers.d.ts
