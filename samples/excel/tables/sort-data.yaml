id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Sort table data
description: Sort table data
script:
  content: "$(\"#setup\").click(setup);\r\n$(\"#sort-table\").click(sortTable);\r\n\r\nasync function sortTable() {\r\n\ttry {\r\n\t\tawait Excel.run(async (context) => {\r\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\r\n\r\n            const expensesTable = sheet.tables.getItem(\"ExpensesTable\");\r\n\r\n            // Queue a command to sort by most expensive transactions at the top (Amount, descending order)\r\n            var sortRange = expensesTable.getDataBodyRange();\r\n\r\n            sortRange.sort.apply([\r\n\t\t\t\t{\r\n\t\t\t\t    key: 3,\r\n\t\t\t\t    ascending: false,\r\n\t\t\t\t},\r\n            ]);\r\n\r\n            await context.sync();\r\n       });\r\n\t }\r\n\tcatch (error) {\r\n\t\tOfficeHelpers.Utilities.log(error);\r\n\t}\r\n}\r\n\r\n/** Create a new table with sample data */\r\nasync function setup() {\r\n\ttry {\r\n\t\tawait Excel.run(async (context) => {\r\n\r\n\t\t\tawait OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, \"Sample\");\r\n\r\n\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Sample\");\r\n\r\n\t\t\tconst expensesTable = sheet.tables.add(\"A1:D1\", true /*hasHeaders*/);\r\n\t\t\t expensesTable.name = \"ExpensesTable\";\r\n\r\n\t\t\texpensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\r\n\r\n\t\t\texpensesTable.rows.add(null /*add at the end*/, [\r\n\t\t\t[\"1/1/2017\", \"The Phone Company\", \"Communications\", \"$120\"],\r\n\t\t\t[\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\r\n\t\t\t[\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\r\n\t\t\t[\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\r\n\t\t\t[\"1/11/2017\", \"Bellows College\", \"Education\", \"$350\"],\r\n\t\t\t[\"1/15/2017\", \"Trey Research\", \"Other\", \"$135\"],\r\n\t\t\t[\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\r\n\t\t]);\r\n\r\n\t\tif (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\r\n\t\t\tsheet.getUsedRange().format.autofitColumns();\r\n\t\t\tsheet.getUsedRange().format.autofitRows();\r\n\t\t}\r\n\t    \tsheet.activate();\r\n\r\n\t\t    await context.sync();\r\n\t    });\r\n    }\r\n\tcatch (error) {\r\n\t\tOfficeHelpers.Utilities.log(error);\r\n\t}\r\n}\r\n"
  language: typescript
style:
  content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
  language: css
template:
  content: "<section class=\"ms-font-m\">\r\n    <p>This sample shows how to sort the data in a table  using the Excel JavaScript API.</p>\r\n</section>\r\n\r\n<section class=\"setup ms-font-m\">\r\n    <h3>Set up</h3>\r\n    <button id=\"setup\" class=\"ms-Button\">\r\n        <span class=\"ms-Button-label\">Create table</span>\r\n    </button>\r\n</section>\r\n\r\n<section class=\"samples ms-font-m\">\r\n    <h3>Try it out</h3>\r\n    <button id=\"sort-table\" class=\"ms-Button\">\r\n        <span class=\"ms-Button-label\">Sort table</span>\r\n    </button>\r\n</section>\r\n"
  language: html
libraries: |+
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js

  // CSS Libraries
  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  // NPM libraries
  core-js@2.4.1/client/core.min.js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.min.js
  jquery@3.1.1

  // IntelliSense: @types/library or node_modules paths or URL to d.ts files
  @types/office-js
  @types/core-js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.d.ts
  @types/jquery

