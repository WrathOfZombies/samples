id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Create a table
description: Creates a table with four columns and seven rows.
script:
  content: "$('#create-table').click(createTable);\n\nasync function createTable() {\n\ttry {\n\t\tawait Excel.run(async (context) =>{\n\n\t\t\tawait ExcelUtilities.forceCreateSheet(context, \"Playground\");\n\n\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Playground\");\n\n\t\t\tconst expensesTable = sheet.tables.add(\"A1:D1\", true /*hasHeaders*/);\n\t\t\t expensesTable.name = \"ExpensesTable\";\n\n\t\t\texpensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n\t\t\texpensesTable.rows.add(null /*add at the end*/, [\n\t\t\t[\"1/1/2017\", \"The Phone Company\", \"Communications\", \"$120\"],\n\t\t\t[\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\n\t\t\t[\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\n\t\t\t[\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\n\t\t\t[\"1/11/2017\", \"Bellows College\", \"Education\", \"$350\"],\n\t\t\t[\"1/15/2017\", \"Trey Research\", \"Other\", \"$135\"],\n\t\t\t[\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\n\t\t]);\n\n\t\tif (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n\t\t\tsheet.getUsedRange().format.autofitColumns();\n\t\t\tsheet.getUsedRange().format.autofitRows();\n\t\t}\n\t    \tsheet.activate();\n\n\t\t    await context.sync();\n\t    });\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\nclass ExcelUtilities {\n\tstatic async forceCreateSheet(context: Excel.RequestContext, sheetName: string): Promise<Excel.Worksheet> {\n\n\t\tif (sheetName == null || sheetName.trim() === '') {\n\t\t\t//throw new error('Sheet name cannot be blank.');\n\t\t}\n\n\t\tconst newSheet = context.workbook.worksheets.add();\n\n\t\tif (Office.context.requirements.isSetSupported('ExcelApi', 1.4)) {\n\t\t\t(context as any).workbook.worksheets.getItemOrNullObject(sheetName).delete();\n\t\t}\n\t\telse {\n\t\t\tawait context.sync();\n\t\t\ttry {\n\t\t\t\tconst oldSheet = (context as Excel.RequestContext).workbook.worksheets.getItem(sheetName);\n\t\t\t\toldSheet.delete();\n\t\t\t\tawait context.sync();\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tif (error instanceof OfficeExtension.Error && error.code === Excel.ErrorCodes.itemNotFound) {\n\t\t\t\t\t// all good\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new error('Unexpected error while trying to delete sheet.', error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnewSheet.name = sheetName;\n\t\treturn newSheet;\n\t}\n}\n"
  language: typescript
style:
  content: /* Your style goes here */
  language: css
template:
  content: |
    <div id="content-main" class="ms-font-m">
        <p>This sample shows how to create a new table with some sample data using the Excel JavaScript API.</p>
        <h3>Try it out</h3>
            <button id="create-table" class="ms-Button">
            <span class="ms-Button-label">Create table</span>
        </button>
    </div>
  language: html
libraries: |-
  // Office.js
  https://appsforoffice.officeapps.live.com/afo/lib/beta/hosted/office.js

  // NPM libraries
  jquery
  office-ui-fabric-js/dist/js/fabric.min.js
  office-ui-fabric-js/dist/css/fabric.min.css
  office-ui-fabric-js/dist/css/fabric.components.min.css
  @microsoft/office-js-helpers/dist/office.helpers.min.js
  core-js/client/core.min.js

  // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
  dt~office-js
  dt~jquery
  dt~core-js
  @microsoft/office-js-helpers/dist/office.helpers.d.ts
