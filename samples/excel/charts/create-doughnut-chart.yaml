id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Create a doughnut chart
description: Create a doughnut chart
script:
  content: "$(\"#setup\").click(setup);\n$(\"#create-doughnut-chart\").click(createChart);\n\nasync function createChart() {\n    try {\n        Excel.run(async (context) => {\n\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            const expensesByCategoryTable = sheet.tables.getItem(\"ExpensesByCategoryTable\");\n\n            const dataRange = expensesByCategoryTable.getDataBodyRange();\n\n            let categoryChart = sheet.charts.add(\"3dpie\", dataRange, \"auto\");\n\n            categoryChart.setPosition(\"A15\", \"F25\");\n            categoryChart.title.text = \"Expenses By Category\";\n            categoryChart.title.format.font.size = 10;\n            categoryChart.title.format.font.name = \"Corbel\";\n            categoryChart.title.format.font.color = \"#41AEBD\";\n            categoryChart.legend.format.font.name = \"Corbel\";\n            categoryChart.legend.format.font.size = 8;\n            categoryChart.legend.position = \"right\";\n            categoryChart.dataLabels.showPercentage = true;\n            categoryChart.dataLabels.format.font.size = 8;\n            categoryChart.dataLabels.format.font.color = \"white\";\n            let points = categoryChart.series.getItemAt(0).points;\n            points.getItemAt(0).format.fill.setSolidColor(\"#0C8DB9\");\n            points.getItemAt(1).format.fill.setSolidColor(\"#B1D9F7\");\n            points.getItemAt(2).format.fill.setSolidColor(\"#4C66C5\");\n            points.getItemAt(3).format.fill.setSolidColor(\"#5CC9EF\");\n            points.getItemAt(4).format.fill.setSolidColor(\"#5CCBAD\");\n            points.getItemAt(5).format.fill.setSolidColor(\"#A5E750\");\n\n\t\t    if (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n\t\t\t    sheet.getUsedRange().format.autofitColumns();\n\t\t\t    sheet.getUsedRange().format.autofitRows();\n\t\t    }\n\n            await context.sync();\n        });\n    }\n    catch (error) {\n            OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function setup() {\n    try {\n        await Excel.run(async (context) => {\n\n            await OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, \"Sample\");\n\n            const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n\n            const expensesTable = sheet.tables.add('A1:B1', true);\n            expensesTable.name = \"ExpensesByCategoryTable\";\n\n            expensesTable.getHeaderRowRange().values = [[\"Category\", \"Expense\"]];\n\n            expensesTable.rows.add(null, [\n                [\"Groceries\", 5000],\n                [\"Entertaiment\", 400],\n                [\"Education\", 12000],\n                [\"Charity\", 1550],\n                [\"Transportation\", 225],\n                [\"Other\", 6005]\n            ]);\n\n            sheet.getUsedRange().getEntireColumn().format.autofitColumns();\n            sheet.getUsedRange().getEntireRow().format.autofitRows();\n\n            sheet.activate();\n\n            await context.sync();\n        });\n    }\n    catch (error) {\n         OfficeHelpers.Utilities.log(error);\n    }\n}\n"
  language: typescript
style:
  content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
  language: css
template:
  content: |-
    <section class="ms-font-m">
        <p>This sample shows how to create a doughnut chart using the Excel JavaScript API.</p>
    </section>

    <section class="setup ms-font-m">
        <h3>Set up</h3>
        <button id="setup" class="ms-Button">
            <span class="ms-Button-label">Create table</span>
        </button>
    </section>

    <section class="samples ms-font-m">
        <h3>Try it out</h3>
        <button id="create-doughnut-chart" class="ms-Button">
            <span class="ms-Button-label">Create a doughnut chart</span>
        </button>
    </section>
  language: html
libraries: |
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js

  // CSS Libraries
  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  // NPM libraries
  core-js@2.4.1/client/core.min.js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.min.js
  jquery@3.1.1

  // IntelliSense: @types/library or node_modules paths or URL to d.ts files
  @types/office-js
  @types/core-js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.d.ts
  @types/jquery
