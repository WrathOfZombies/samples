id: ''
gist: ''
source: EXCEL
author: Microsoft
name: Refresh pivot table
description: |
  Refresh pivot table
script:
  content: "$(\"#setup\").click(setup);\n$(\"#refresh-pivot-table\").click(refreshPivotTable);\n\nasync function refreshPivotTable() {\n    await Excel.run(async (context) => {\n        try {\n\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n            // First, force a change in the table data by setting the value of Amount in the third row to $500\n            const expensesTable = sheet.tables.getItem(\"ExpensesTable\");\n\n            const range = expensesTable.columns.getItem(\"AMOUNT\").getDataBodyRange().getRow(2).values = [[\"$500\"]];\n\n            await sheet.context.sync();\n\n\t\t\t// Now, refresh the pivot table. This should pick up our changes made with code as well as any changes made in the UI\n\t\t\tconst expensesPivot = sheet.pivotTables.getItem(\"PivotTable1\");\n\n            expensesPivot.refresh();\n\n            await context.sync();\n        }\n        catch (error) {\n             OfficeHelpers.Utilities.log(error);\n        }\n    })\n}\n\n/** Create a new table with some sample data */\nasync function setup() {\n    try {\n    \tawait Excel.run(async (context) => {\n\n\t\t\tawait OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, \"Sample\");\n\n\t\t\tconst sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n\t\t\tconst expensesTable = sheet.tables.add('A1:D1', true /*hasHeaders*/);\n\t\t\t expensesTable.name = \"ExpensesTable\";\n\n\t\t\texpensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n\t\t\texpensesTable.rows.add(null /*add at the end*/, [\n\t\t\t[\"1/1/2017\", \"The Phone Company\", \"Communications\", \"$120\"],\n\t\t\t[\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\n\t\t\t[\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\n\t\t\t[\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\n\t\t\t[\"1/11/2017\", \"Bellows College\", \"Education\", \"$350\"],\n\t\t\t[\"1/15/2017\", \"Trey Research\", \"Other\", \"$135\"],\n\t\t\t[\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\n\t\t]);\n\n\t\tif (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n\t\t\tsheet.getUsedRange().format.autofitColumns();\n\t\t\tsheet.getUsedRange().format.autofitRows();\n\t\t}\n\n\t    sheet.activate();\n\n\t\tawait context.sync();\n\t\t});\n    }\n\tcatch (error) {\n\t\tOfficeHelpers.Utilities.log(error);\n\t}\n}\n\n"
  language: typescript
style:
  content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
  language: css
template:
  content: |+
    <section class="ms-font-m">
        <p>This sample shows how to refresh a pivot table using the Excel JavaScript API.  Note that this API requires the Excel 1.3 requirement set.</p>
    </section>

    <section class="setup ms-font-m">
        <h3>Set up</h3>
        <button id="setup" class="ms-Button">
            <span class="ms-Button-label">Create table</span>
        </button>
        <p>Next, click inside the table and insert a pivot table using the Insert menu in Excel, specifying the following options.<p>
        <ol>
            <li>Choose Existing sheet.</li>
            <li>Specify A15 as the location.</li>
            <li>Select the Amount and Category columns.</li>
            <li>Make sure the name of the pivot table in the UI matches with the name specified in code.</li>
        </ol>
    </section>

    <section class="samples ms-font-m">
        <h3>Try it out</h3>
        <button id="refresh-pivot-table" class="ms-Button">
            <span class="ms-Button-label">Refresh pivot table</span>
        </button>
    </section>


  language: html
libraries: |
  // Office.js
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js

  // CSS Libraries
  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  // NPM libraries
  core-js@2.4.1/client/core.min.js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.min.js
  jquery@3.1.1

  // IntelliSense: @types/library or node_modules paths or URL to d.ts files
  @types/office-js
  @types/core-js
  @microsoft/office-js-helpers@0.6.0-beta.7/dist/office.helpers.d.ts
  @types/jquery
